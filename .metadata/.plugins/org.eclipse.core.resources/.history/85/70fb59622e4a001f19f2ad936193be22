/*
 * Control_ECU.c
 *
 *  Created on: Jul 21, 2024
 *      Author: Administrator
 */
#include "Headers/std_types.h"
#include "Headers/common_macros.h"
#include <util/delay.h>
#include "avr/io.h"
#include "Headers/uart2.h"
#include "Headers/buzzer.h"
#define MC2_READY 0x10
unsigned char Main_pass[6];
/*UART_ConfigType UART_config;*/


/*******************************************************************************
 *                      Functions Prototypes                                   *
 *******************************************************************************/
char strcmpp(const unsigned char *pass1 , const unsigned char *pass2);
int main(){
	/*UART_config.baud_rate = 9600;
	UART_config.bit_data = BIT_8;
	UART_config.parity = EVEN;
	UART_config.stop_bit=ONE;
	UART_init(&UART_config);*/
	Buzzer_init() ;
	UART_init(9600);

	/*UART_sendString(Main_pass);*/
	Buzzer_on();
	/*UART_receiveString(Main_pass);*/
	//_delay_ms(150);

	UART_receiveString(Main_pass);
	Buzzer_off();
	UART_sendString(Main_pass);
	//_delay_ms(300);
	//Buzzer_on();
	//UART_sendString("11111");
	/*UART_sendByte(key_num);*/
	//Buzzer_off();
	while(1){

	}
	return 0;
}
char strcmpp(const unsigned  char *pass1 , const unsigned char *pass2){

	while(*pass1 != '\0'){
		if (*pass1 != *pass2){
			return 0;
		}
		pass1++;
		pass2++;
	}
	return 1;
}

char* itoa(int num, char* str, int base) {
    int i = 0;
    int isNegative = 0;


    if (num == 0) {
        str[i++] = '0';
        str[i] = '\0';
        return str;
    }


    if (num < 0 && base == 10) {
        isNegative = 1;
        num = -num;
    }


    while (num != 0) {
        int rem = num % base;
        str[i++] = (rem > 9) ? (rem - 10) + 'a' : rem + '0';
        num = num / base;
    }
    if (isNegative) {
        str[i++] = '-';
    }

    str[i] = '\0';


    int start = 0;
    int end = i - 1;
    while (start < end) {
        char temp = str[start];
        str[start] = str[end];
        str[end] = temp;
        start++;
        end--;
    }

    return str;
}
